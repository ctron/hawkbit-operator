name: ci

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

env:
  IMAGE_NAME: hawkbit-operator

jobs:

  lint-chart:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.6.3

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Setup chart testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml --all

  build:
    name: build
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Store artifact
        uses: actions/upload-artifact@v1
        with:
          name: binary
          path: target/release/hawkbit-operator

      - run: ls target/release/

      - name: Build container
        run: |
          docker build . --file .github/Dockerfile \
            --tag $IMAGE_NAME

      - name: Login to github container repository
        if: ${{github.head_ref == ''}} # only for non-PRs
        run: echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push latest to github container repository
        if: ${{github.head_ref == ''}} # only for non-PRs
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  install-chart:
    name: install-chart
    runs-on: ubuntu-20.04
    needs:
      - lint-chart
      - build
    strategy:
      matrix:
        k8s:
          # the versions supported by chart-testing are the tags
          # available for the docker.io/kindest/node image
          # https://hub.docker.com/r/kindest/node/tags
          - v1.19.11
          - v1.21.2
          - v1.22.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.6.3

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: .github/kind-config.yaml
          node_image: kindest/node:${{ matrix.k8s }}

      - name: Pre-create namespace
        run: kubectl create namespace hawkbit-operator-ci

      - name: Setup chart testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Run chart-testing (install)
        run: ct install --config .github/ct.yaml